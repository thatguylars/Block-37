generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model user {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  username  String    @unique
  reviews   review[]
  comments  comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  @@index([email])
}

model item {
  id          Int       @id @default(autoincrement())
  name        String
  imageUrl        String      @db.VarChar(255)
  description String
  reviews     review[]
  averageRating Float   @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
    @@index([name])
}

model review {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Int
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  item      item     @relation(fields: [itemId], references: [id],onDelete: Cascade)
  itemId    Int
  comments  comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([userId])  
  @@index([itemId])  
  @@index([userId, itemId]) 
}

model comment {
  id        Int      @id @default(autoincrement())
  content   String
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  review    review?  @relation(fields: [reviewId], references: [id],onDelete: Cascade)
  reviewId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([userId])
  @@index([reviewId])
}